{
  "info": {
    "_postman_id": "d8f32c40-44b9-4c2a-8c6e-963a9904c854",
    "name": "PingFed Admin API",
    "description": "## Collection - PingFed Admin API\n\nThis set demonstrates the new APIs in PF 9.2+ that allow you do use the Admin API to fully build out a PingFed server that's connected to PingDirectory.\n\nThis set of calls:\n* Accepts EULA\n* Imports a PingFed license (stored in the Environment)\n* Adds the intitial Admin user\n* Enables the Server Roles\n* Adds PingDirectory as a Data Store\n* Adds a LDAP Password Credential Validator\n* Adds a HTML Form Adapter with the PCV\n* Adds an AuthN Policy with Contract",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
  },
  "item": [
    {
      "name": "Check PF is Running",
      "item": [
        {
          "name": "Check if Server is up",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4a7864a9-1358-402a-b81d-bcc6da8044ff",
                "exec": [
                  "// Checks to see if the server actually responded",
                  "// If not, run the call again (with the 30 sec delay)",
                  "postman.setNextRequest(\"Check if Server is up\");",
                  "",
                  "pm.test(\"Server is Up\", function () {",
                  "    pm.response.to.be.ok;",
                  "    postman.setNextRequest(\"00-Start-API-Calls\");",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "f9e66381-07f9-487a-b8e4-f97b5521bef7",
                "exec": [
                  "// Puts a 30 sec delay into this call",
                  "setTimeout(function() {",
                  " console.log(\"Connecting to Server\");",
                  "}, 30000);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "49372564-a18e-4ced-9150-083ed9e5fe54",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "url": "https://pingfederate:9031/pf/heartbeat.ping"
          },
          "response": []
        },
        {
          "name": "00-Start-API-Calls",
          "_postman_id": "cb2b102b-49d7-47b2-b08c-7b6096528d40",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "url": "https://postman-echo.com"
          },
          "response": []
        }
      ],
      "_postman_id": "18a8c929-293b-40d3-8adc-e9809f196055"
    },
    {
      "name": "Accept EULA",
      "item": [
        {
          "name": "Get EULA URL",
          "_postman_id": "90b631d0-04d3-41d2-8e36-9a8810e45246",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "url": "https://{{pingfed}}:{{admin}}/pf-admin-api/v1/license/agreement"
          },
          "response": []
        }
      ],
      "_postman_id": "64491a04-b445-44f1-9869-dd20b6aa1f32"
    },
    {
      "name": "Config Docker image (New Server Profile)",
      "item": [
        {
          "name": "Server Config",
          "item": [
            {
              "name": "Get License",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "dad3bd03-a53e-472d-96ae-5dc8c7f52a29",
                    "exec": [
                      "pm.test(\"PF License retrieved\", function () {",
                      "    pm.response.to.have.status(200);",
                      "    ",
                      "    var response = pm.response.json();",
                      "    pm.environment.set(\"wsTrustEnabled\", response.wsTrustEnabled);    ",
                      "    pm.environment.set(\"oauthEnabled\", response.oauthEnabled);",
                      "    pm.environment.set(\"provisioningEnabled\", response.provisioningEnabled);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "bb62736f-e2c5-4d51-b4b0-a556cd961700",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "X-XSRF-Header",
                    "value": "pingfederate",
                    "type": "text"
                  }
                ],
                "url": "https://{{pingfed}}:{{admin}}/pf-admin-api/v1/license",
                "description": "Used to configure Server Roles that match the license"
              },
              "response": []
            },
            {
              "name": "Server Settings",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "37cd23c7-5a5a-4834-bc81-9210b59a4074",
                    "exec": [
                      "pm.test(\"Server Settings Configured\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "fbdea1c9-bb61-41dc-bf01-8d372de0d6c7",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  },
                  {
                    "key": "X-XSRF-Header",
                    "value": "PingFederate",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"contactInfo\": {\n    \"company\": \"PF Demo\"\n  },\n  \"rolesAndProtocols\": {\n    \"oauthRole\": {\n      \"enableOauth\": {{oauthEnabled}},\n      \"enableOpenIdConnect\": {{oauthEnabled}}\n    },\n    \"idpRole\": {\n      \"enable\": true,\n      \"saml20Profile\": {\n        \"enable\": true,\n        \"enableAutoConnect\": false\n      },\n      \"enableOutboundProvisioning\": {{provisioningEnabled}},\n      \"enableSaml11\": false,\n      \"enableSaml10\": false,\n      \"enableWsFed\": true,\n      \"enableWsTrust\": {{wsTrustEnabled}}\n    },\n    \"spRole\": {\n      \"enable\": true,\n      \"saml20Profile\": {\n        \"enable\": true,\n        \"enableXASP\": false,\n        \"enableAutoConnect\": false\n      },\n      \"enableSaml11\": false,\n      \"enableSaml10\": false,\n      \"enableWsFed\": false,\n      \"enableWsTrust\": false,\n      \"enableOpenIDConnect\": true,\n      \"enableInboundProvisioning\": false\n    },\n    \"enableIdpDiscovery\": false\n  },\n  \"federationInfo\": {\n    \"baseUrl\": \"https://{{pingfed}}:{{runtime}}\",\n    \"saml2EntityId\": \"https://{{pingfed}}:{{runtime}}\",\n    \"autoConnectEntityId\": \"https://{{pingfed}}:{{runtime}}\",\n    \"saml1xIssuerId\": \"https://{{pingfed}}:{{runtime}}\",\n    \"saml1xSourceId\": \"https://{{pingfed}}:{{runtime}}\",\n    \"wsfedRealm\": \"https://{{pingfed}}:{{runtime}}\"\n  }\n}"
                },
                "url": "https://{{pingfed}}:{{admin}}/pf-admin-api/v1/serverSettings"
              },
              "response": []
            },
            {
              "name": "Add Signing Cert",
              "_postman_id": "fd964aad-0b4f-40a0-9dae-eaa7070508c8",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  },
                  {
                    "key": "X-XSRF-Header",
                    "value": "pingfederate",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"commonName\": \"Default Signing Cert\",\n  \"organization\": \"Ping Identity\",\n  \"country\": \"US\",\n  \"validDays\": \"1825\",\n  \"keyAlgorithm\": \"RSA\",\n  \"keySize\": \"2048\",\n  \"signatureAlgorithm\": \"SHA256withRSA\"\n}"
                },
                "url": "https://{{pingfed}}:{{admin}}/pf-admin-api/v1/keyPairs/signing/generate"
              },
              "response": []
            }
          ],
          "_postman_id": "e2ae9616-4d84-4719-acc8-0ef9c659722e",
          "_postman_isSubFolder": true
        },
        {
          "name": "IDP Config - DataStore \\ PCV \\ Adapter",
          "item": [
            {
              "name": "Add Datastore - PD",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "18654f1f-702d-45d1-b2e2-4742a2253d2e",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "7c855f38-dfee-4e47-b7d8-7e230cd38dd3",
                    "exec": [
                      "pm.test(\"PD Datastore Created\", function () {",
                      "    pm.response.to.have.status(201);",
                      "    ",
                      "    var response = pm.response.json();",
                      "    pm.environment.set(\"datastoreId\", response.id);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "3b0dc87c-1739-44cb-89ea-ba7406b431ad",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  },
                  {
                    "key": "X-XSRF-Header",
                    "value": "PingFederate",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "    {\n      \"type\": \"LDAP\",\n      \"maskAttributeValues\": false,\n      \"hostnames\": [\n        \"{{pingdir}}\"\n      ],\n      \"ldapType\": \"PING_DIRECTORY\",\n      \"bindAnonymously\": false,\n      \"userDN\": \"{{pingdirAdmin}}\",\n\t  \"password\": \"{{pingdirAdminPwd}}\",\n      \"useSsl\": false,\n      \"useDnsSrvRecords\": false,\n      \"name\": \"PingDirectory\",\n      \"testOnBorrow\": false,\n      \"testOnReturn\": false,\n      \"createIfNecessary\": true\n    }"
                },
                "url": "https://{{pingfed}}:{{admin}}/pf-admin-api/v1/dataStores"
              },
              "response": []
            },
            {
              "name": "Add Password Credential Validator (LDAP - PD)",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "18654f1f-702d-45d1-b2e2-4742a2253d2e",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "3a8cf566-6b2a-4887-ac6f-f7e702cb3476",
                    "exec": [
                      "pm.test(\"LDAP PCV Created\", function () {",
                      "    pm.response.to.have.status(201);",
                      "    ",
                      "    var response = pm.response.json();",
                      "    pm.environment.set(\"pcvId\", response.id);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "ad9db93e-c32f-4065-a90b-1414f550ba8b",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  },
                  {
                    "key": "X-XSRF-Header",
                    "value": "PingFederate",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"id\": \"PDPCV\",\n  \"name\": \"PD PCV\",\n  \"pluginDescriptorRef\": {\n    \"id\": \"org.sourceid.saml20.domain.LDAPUsernamePasswordCredentialValidator\"\n  },\n  \"configuration\": {\n    \"tables\": [\n      {\n        \"name\": \"Authentication Error Overrides\",\n        \"rows\": []\n      }\n    ],\n    \"fields\": [\n      {\n        \"name\": \"LDAP Datastore\",\n        \"value\": \"{{datastoreId}}\"\n      },\n      {\n        \"name\": \"Search Base\",\n        \"value\": \"{{baseDN}}\"\n      },\n      {\n        \"name\": \"Search Filter\",\n        \"value\": \"(|(uid=${username})(mail=${username}))\"\n      },\n      {\n        \"name\": \"Scope of Search\",\n        \"value\": \"Subtree\"\n      },\n      {\n        \"name\": \"Case-Sensitive Matching\",\n        \"value\": \"true\"\n      },\n      {\n        \"name\": \"Display Name Attribute\",\n        \"value\": \"displayName\"\n      },\n      {\n        \"name\": \"Mail Attribute\",\n        \"value\": \"mail\"\n      },\n      {\n        \"name\": \"SMS Attribute\",\n        \"value\": \"\"\n      },\n      {\n        \"name\": \"PingID Username Attribute\",\n        \"value\": \"\"\n      },\n      {\n        \"name\": \"Mail Search Filter\",\n        \"value\": \"\"\n      },\n      {\n        \"name\": \"Username Attribute\",\n        \"value\": \"\"\n      },\n      {\n        \"name\": \"Mail Verified Attribute\",\n        \"value\": \"\"\n      }\n    ]\n  },\n  \"attributeContract\": {\n    \"coreAttributes\": [\n      {\n        \"name\": \"mail\"\n      },\n      {\n        \"name\": \"givenName\"\n      },\n      {\n        \"name\": \"DN\"\n      },\n      {\n        \"name\": \"username\"\n      }\n    ],\n    \"extendedAttributes\": [\n      {\n        \"name\": \"entryUUID\"\n      }\n    ]\n  }\n}"
                },
                "url": "https://{{pingfed}}:{{admin}}/pf-admin-api/v1/passwordCredentialValidators"
              },
              "response": []
            },
            {
              "name": "Create Adapter - HTML Form",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "18654f1f-702d-45d1-b2e2-4742a2253d2e",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "1e26e9c5-34dc-4319-94d4-f12ca92fd718",
                    "exec": [
                      "pm.test(\"HTML Form Adapter Created\", function () {",
                      "    pm.response.to.have.status(201);",
                      "    ",
                      "    var response = pm.response.json();",
                      "    pm.environment.set(\"adapterId\", response.id);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "81f019e4-dae2-48fa-b6df-5c9b7ffa8e33",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  },
                  {
                    "key": "X-XSRF-Header",
                    "value": "PingFederate",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "       {\n            \"id\": \"HTMLForm\",\n            \"name\": \"HTML Form\",\n            \"pluginDescriptorRef\": {\n                \"id\": \"com.pingidentity.adapters.htmlform.idp.HtmlFormIdpAuthnAdapter\"\n            },\n            \"configuration\": {\n                \"tables\": [\n                    {\n                        \"name\": \"Credential Validators\",\n                        \"rows\": [\n                            {\n                                \"fields\": [\n                                    {\n                                        \"name\": \"Password Credential Validator Instance\",\n                                        \"value\": \"{{pcvId}}\"\n                                    }\n                                ]\n                            }\n                        ]\n                    }\n                ],\n                \"fields\": [\n                    {\n                        \"name\": \"Challenge Retries\",\n                        \"value\": \"3\"\n                    },\n                    {\n                        \"name\": \"Session State\",\n                        \"value\": \"None\"\n                    },\n                    {\n                        \"name\": \"Session Timeout\",\n                        \"value\": \"60\"\n                    },\n                    {\n                        \"name\": \"Session Max Timeout\",\n                        \"value\": \"480\"\n                    },\n                    {\n                        \"name\": \"Allow Password Changes\",\n                        \"value\": \"true\"\n                    },\n                    {\n                        \"name\": \"Password Management System\",\n                        \"value\": \"\"\n                    },\n                    {\n                        \"name\": \"Enable 'Remember My Username'\",\n                        \"value\": \"true\"\n                    },\n                    {\n                        \"name\": \"Enable 'This is My Device'\",\n                        \"value\": \"false\"\n                    },\n                    {\n                        \"name\": \"Change Password Email Notification\",\n                        \"value\": \"false\"\n                    },\n                    {\n                        \"name\": \"Show Password Expiring Warning\",\n                        \"value\": \"true\"\n                    },\n                    {\n                        \"name\": \"Password Reset Type\",\n                        \"value\": \"NONE\"\n                    },\n                    {\n                        \"name\": \"Account Unlock\",\n                        \"value\": \"false\"\n                    },\n                    {\n                        \"name\": \"Local Identity Profile\",\n                        \"value\": \"\"\n                    },\n                    {\n                        \"name\": \"Enable Username Recovery\",\n                        \"value\": \"false\"\n                    },\n                    {\n                        \"name\": \"Login Template\",\n                        \"value\": \"html.form.login.template.html\"\n                    },\n                    {\n                        \"name\": \"Logout Path\",\n                        \"value\": \"\"\n                    },\n                    {\n                        \"name\": \"Logout Redirect\",\n                        \"value\": \"\"\n                    },\n                    {\n                        \"name\": \"Logout Template\",\n                        \"value\": \"idp.logout.success.page.template.html\"\n                    },\n                    {\n                        \"name\": \"Change Password Template\",\n                        \"value\": \"html.form.change.password.template.html\"\n                    },\n                    {\n                        \"name\": \"Change Password Message Template\",\n                        \"value\": \"html.form.message.template.html\"\n                    },\n                    {\n                        \"name\": \"Password Management System Message Template\",\n                        \"value\": \"html.form.message.template.html\"\n                    },\n                    {\n                        \"name\": \"Change Password Email Template\",\n                        \"value\": \"message-template-end-user-password-change.html\"\n                    },\n                    {\n                        \"name\": \"Expiring Password Warning Template\",\n                        \"value\": \"html.form.password.expiring.notification.template.html\"\n                    },\n                    {\n                        \"name\": \"Threshold for Expiring Password Warning\",\n                        \"value\": \"7\"\n                    },\n                    {\n                        \"name\": \"Snooze Interval for Expiring Password Warning\",\n                        \"value\": \"24\"\n                    },\n                    {\n                        \"name\": \"Login Challenge Template\",\n                        \"value\": \"html.form.login.challenge.template.html\"\n                    },\n                    {\n                        \"name\": \"'Remember My Username' Lifetime\",\n                        \"value\": \"30\"\n                    },\n                    {\n                        \"name\": \"'This is My Device' Lifetime\",\n                        \"value\": \"30\"\n                    },\n                    {\n                        \"name\": \"Allow Username Edits During Chaining\",\n                        \"value\": \"false\"\n                    },\n                    {\n                        \"name\": \"Track Authentication Time\",\n                        \"value\": \"true\"\n                    },\n                    {\n                        \"name\": \"Post-Password Change Re-Authentication Delay\",\n                        \"value\": \"0\"\n                    },\n                    {\n                        \"name\": \"Password Reset Username Template\",\n                        \"value\": \"forgot-password.html\"\n                    },\n                    {\n                        \"name\": \"Password Reset Code Template\",\n                        \"value\": \"forgot-password-resume.html\"\n                    },\n                    {\n                        \"name\": \"Password Reset Template\",\n                        \"value\": \"forgot-password-change.html\"\n                    },\n                    {\n                        \"name\": \"Password Reset Error Template\",\n                        \"value\": \"forgot-password-error.html\"\n                    },\n                    {\n                        \"name\": \"Password Reset Success Template\",\n                        \"value\": \"forgot-password-success.html\"\n                    },\n                    {\n                        \"name\": \"Account Unlock Template\",\n                        \"value\": \"account-unlock.html\"\n                    },\n                    {\n                        \"name\": \"OTP Length\",\n                        \"value\": \"8\"\n                    },\n                    {\n                        \"name\": \"OTP Time to Live\",\n                        \"value\": \"10\"\n                    },\n                    {\n                        \"name\": \"PingID Properties\",\n                        \"value\": \"\"\n                    },\n                    {\n                        \"name\": \"Require Verified Email\",\n                        \"value\": \"false\"\n                    },\n                    {\n                        \"name\": \"Username Recovery Template\",\n                        \"value\": \"username.recovery.template.html\"\n                    },\n                    {\n                        \"name\": \"Username Recovery Info Template\",\n                        \"value\": \"username.recovery.info.template.html\"\n                    },\n                    {\n                        \"name\": \"Username Recovery Email Template\",\n                        \"value\": \"message-template-username-recovery.html\"\n                    },\n                    {\n                        \"name\": \"CAPTCHA for Authentication\",\n                        \"value\": \"false\"\n                    },\n                    {\n                        \"name\": \"CAPTCHA for Password change\",\n                        \"value\": \"false\"\n                    },\n                    {\n                        \"name\": \"CAPTCHA for Password Reset\",\n                        \"value\": \"false\"\n                    },\n                    {\n                        \"name\": \"CAPTCHA for Username recovery\",\n                        \"value\": \"false\"\n                    }\n                ]\n            },\n            \"attributeContract\": {\n                \"coreAttributes\": [\n                    {\n                        \"name\": \"policy.action\",\n                        \"masked\": false,\n                        \"pseudonym\": false\n                    },\n                    {\n                        \"name\": \"username\",\n                        \"masked\": false,\n                        \"pseudonym\": true\n                    }\n                ],\n                \"extendedAttributes\": [\n                    {\n                        \"name\": \"entryUUID\",\n                        \"masked\": false,\n                        \"pseudonym\": false\n                    },\n                    {\n                        \"name\": \"mail\",\n                        \"masked\": false,\n                        \"pseudonym\": false\n                    }\n                ],\n                \"maskOgnlValues\": false\n            },\n            \"attributeMapping\": {\n                \"attributeSources\": [],\n                \"attributeContractFulfillment\": {\n                    \"entryUUID\": {\n                        \"source\": {\n                            \"type\": \"ADAPTER\"\n                        },\n                        \"value\": \"entryUUID\"\n                    },\n                    \"mail\": {\n                        \"source\": {\n                            \"type\": \"ADAPTER\"\n                        },\n                        \"value\": \"mail\"\n                    },\n                    \"policy.action\": {\n                        \"source\": {\n                            \"type\": \"ADAPTER\"\n                        },\n                        \"value\": \"policy.action\"\n                    },\n                    \"username\": {\n                        \"source\": {\n                            \"type\": \"ADAPTER\"\n                        },\n                        \"value\": \"username\"\n                    }\n                },\n                \"issuanceCriteria\": {\n                    \"conditionalCriteria\": []\n                }\n            }\n        }"
                },
                "url": "https://{{pingfed}}:{{admin}}/pf-admin-api/v1/idp/adapters"
              },
              "response": []
            },
            {
              "name": "Create Adapter - PingID",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "18654f1f-702d-45d1-b2e2-4742a2253d2e",
                    "exec": [
                      "var removeIllegalCharacters = function(input) {",
                      "    return input",
                      "        .replace(/=/g, '')",
                      "        .replace(/\\+/g, '-')",
                      "        .replace(/\\//g, '_');",
                      "};",
                      "",
                      "// Base64 Encoding function",
                      "var base64object = function(input) {",
                      "    ",
                      "    console.log(input);",
                      "    var inputWords = CryptoJS.enc.Utf8.parse(input);",
                      "    var base64 = CryptoJS.enc.Base64.stringify(inputWords);",
                      "    var output = removeIllegalCharacters(base64);",
                      "    return output;",
                      "};",
                      "",
                      "var licenseBase64 = base64object(pm.environment.get('pingID'));",
                      "",
                      "pm.environment.set('encodedPingID', licenseBase64);"
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "1e26e9c5-34dc-4319-94d4-f12ca92fd718",
                    "exec": [
                      "pm.test(\"PD Datastore Created\", function () {",
                      "    pm.response.to.have.status(201);",
                      "    ",
                      "    var response = pm.response.json();",
                      "    pm.environment.set(\"adapterId\", response.id);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "01640a7a-63f8-4fdc-89f9-7f38b297fb44",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  },
                  {
                    "key": "X-XSRF-Header",
                    "type": "text",
                    "value": "PingFederate"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "       {\n            \"id\": \"PingID\",\n            \"name\": \"PingID\",\n            \"pluginDescriptorRef\": {\n                \"id\": \"com.pingidentity.adapters.pingid.PingIDAdapter\"\n            },\n            \"configuration\": {\n        \"tables\": [],\n        \"fields\": [\n          {\n            \"name\": \"PingID Properties\",\n            \"value\": \"{{encodedPingID}}\"\n          },\n          {\n            \"name\": \"LDAP Data source\",\n            \"value\": \"\"\n          },\n          {\n            \"name\": \"Query Directory\",\n            \"value\": \"false\"\n          },\n          {\n            \"name\": \"Base Domain\",\n            \"value\": \"\"\n          },\n          {\n            \"name\": \"Filter\",\n            \"value\": \"\"\n          },\n          {\n            \"name\": \"LDAP Search Scope\",\n            \"value\": \"3\"\n          },\n          {\n            \"name\": \"fname attribute\",\n            \"value\": \"\"\n          },\n          {\n            \"name\": \"lname attribute\",\n            \"value\": \"\"\n          },\n          {\n            \"name\": \"email attribute\",\n            \"value\": \"\"\n          },\n          {\n            \"name\": \"group attribute\",\n            \"value\": \"\"\n          },\n          {\n            \"name\": \"phone attribute\",\n            \"value\": \"\"\n          },\n          {\n            \"name\": \"YubiKey attribute\",\n            \"value\": \"\"\n          },\n          {\n            \"name\": \"Secondary email attribute\",\n            \"value\": \"\"\n          },\n          {\n            \"name\": \"Voice number attribute\",\n            \"value\": \"\"\n          },\n          {\n            \"name\": \"State attribute\",\n            \"value\": \"\"\n          },\n          {\n            \"name\": \"PingID Heartbeat Timeout\",\n            \"value\": \"\"\n          },\n          {\n            \"name\": \"Authentication During Errors\",\n            \"value\": \"REJECT\"\n          },\n          {\n            \"name\": \"Users without a paired device\",\n            \"value\": \"block\"\n          },\n          {\n            \"name\": \"LDAP Data Source For Devices\",\n            \"value\": \"\"\n          },\n          {\n            \"name\": \"Create entry for devices\",\n            \"value\": \"\"\n          },\n          {\n            \"name\": \"Encryption Key For Devices\",\n            \"value\": \"\"\n          },\n          {\n            \"name\": \"Distinguished Name Pattern\",\n            \"value\": \"\"\n          },\n          {\n            \"name\": \"HTML Template\",\n            \"value\": \"pingid.offline.auth.login.template.html\"\n          },\n          {\n            \"name\": \"Cookie Duration\",\n            \"value\": \"1\"\n          },\n          {\n            \"name\": \"PingID Properties File Name\",\n            \"value\": \"pingid.properties.1\"\n          },\n          {\n            \"name\": \"Refresh UserId Cookie\",\n            \"value\": \"false\"\n          },\n          {\n            \"name\": \"Require PingID Registration\",\n            \"value\": \"false\"\n          }\n        ]\n      },\n      \"attributeContract\": {\n        \"coreAttributes\": [\n          {\n            \"name\": \"org.sourceid.saml20.adapter.idp.authn.authnCtx\",\n            \"masked\": false,\n            \"pseudonym\": false\n          },\n          {\n            \"name\": \"pingid_state\",\n            \"masked\": false,\n            \"pseudonym\": false\n          },\n          {\n            \"name\": \"subject\",\n            \"masked\": false,\n            \"pseudonym\": true\n          }\n        ],\n        \"extendedAttributes\": [],\n        \"maskOgnlValues\": false\n      },\n      \"attributeMapping\": {\n        \"attributeSources\": [],\n        \"attributeContractFulfillment\": {\n          \"org.sourceid.saml20.adapter.idp.authn.authnCtx\": {\n            \"source\": {\n              \"type\": \"ADAPTER\"\n            },\n            \"value\": \"org.sourceid.saml20.adapter.idp.authn.authnCtx\"\n          },\n          \"pingid_state\": {\n            \"source\": {\n              \"type\": \"ADAPTER\"\n            },\n            \"value\": \"pingid_state\"\n          },\n          \"subject\": {\n            \"source\": {\n              \"type\": \"ADAPTER\"\n            },\n            \"value\": \"subject\"\n          }\n        },\n        \"issuanceCriteria\": {\n          \"conditionalCriteria\": []\n        }\n      }\n    }"
                },
                "url": "https://{{pingfed}}:{{admin}}/pf-admin-api/v1/idp/adapters"
              },
              "response": []
            }
          ],
          "_postman_id": "e556918d-f585-41c2-81d0-898335fa9c0f",
          "auth": {
            "type": "basic",
            "basic": {
              "password": "2FederateM0re",
              "username": "Administrator"
            }
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "603b6cc6-2419-4853-a9a2-bfe5d81e1d91",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "787babf8-a335-48f2-8221-7fe05e963476",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "IDP Config - AuthN Policy",
          "item": [
            {
              "name": "Create AuthN Policy Contracts",
              "item": [
                {
                  "name": "APC - HTML Form",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "18654f1f-702d-45d1-b2e2-4742a2253d2e",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "4f14cf69-4857-4f29-b857-d41ad98f72a3",
                        "exec": [
                          "pm.test(\"Policy Contract (HTML) Created\", function () {",
                          "    pm.response.to.have.status(201);",
                          "    ",
                          "    var response = pm.response.json();",
                          "    pm.environment.set(\"policyContractHTML\", response.id);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "5ca45f57-a4ed-4ed0-8276-12c62600a1dd",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      },
                      {
                        "key": "X-XSRF-Header",
                        "type": "text",
                        "value": "PingFederate"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "    {\n      \"name\": \"HTML Form\",\n      \"coreAttributes\": [\n        {\n          \"name\": \"subject\"\n        }\n      ],\n      \"extendedAttributes\": [\n        {\n          \"name\": \"entryUUID\"\n        },\n        {\n          \"name\": \"mail\"\n        }\n      ]\n    }"
                    },
                    "url": "https://{{pingfed}}:{{admin}}/pf-admin-api/v1/authenticationPolicyContracts"
                  },
                  "response": []
                },
                {
                  "name": "APC - HTML Form with LIP",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "83fd87e5-6289-4245-aeac-d5686d94d167",
                        "exec": [
                          "pm.test(\"Policy Contract (HTML) Created\", function () {",
                          "    pm.response.to.have.status(201);",
                          "    ",
                          "    var response = pm.response.json();",
                          "    pm.environment.set(\"policyContractHTMLwithLIP\", response.id);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "80a442b0-65ac-4672-922a-c8b4585bd0eb",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "95d1dab6-6675-4d36-bade-cef468dbe346",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      },
                      {
                        "key": "X-XSRF-Header",
                        "type": "text",
                        "value": "PingFederate"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n      \"name\": \"HTML Form with LIP\",\n      \"coreAttributes\": [\n        {\n          \"name\": \"subject\"\n        }\n      ],\n      \"extendedAttributes\": [\n        {\n          \"name\": \"entryUUID\"\n        },\n        {\n          \"name\": \"mail\"\n        }\n      ]\n    }"
                    },
                    "url": "https://{{pingfed}}:{{admin}}/pf-admin-api/v1/authenticationPolicyContracts"
                  },
                  "response": []
                },
                {
                  "name": "APC - MFA",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "18654f1f-702d-45d1-b2e2-4742a2253d2e",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "4f14cf69-4857-4f29-b857-d41ad98f72a3",
                        "exec": [
                          "pm.test(\"Policy Contract (MFA) Created\", function () {",
                          "    pm.response.to.have.status(201);",
                          "    ",
                          "    var response = pm.response.json();",
                          "    pm.environment.set(\"policyContractMFA\", response.id);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "08066eeb-94d5-498e-9f8b-0ef5187e6543",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      },
                      {
                        "key": "X-XSRF-Header",
                        "type": "text",
                        "value": "PingFederate"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "    {\n      \"name\": \"MFA\",\n      \"coreAttributes\": [\n        {\n          \"name\": \"subject\"\n        }\n      ],\n      \"extendedAttributes\": [\n        {\n          \"name\": \"entryUUID\"\n        },\n        {\n          \"name\": \"mail\"\n        }\n      ]\n    }"
                    },
                    "url": "https://{{pingfed}}:{{admin}}/pf-admin-api/v1/authenticationPolicyContracts"
                  },
                  "response": []
                },
                {
                  "name": "APC - Federated OIDC",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "18654f1f-702d-45d1-b2e2-4742a2253d2e",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "4f14cf69-4857-4f29-b857-d41ad98f72a3",
                        "exec": [
                          "pm.test(\"Policy Contract Created\", function () {",
                          "    pm.response.to.have.status(201);",
                          "    ",
                          "    var response = pm.response.json();",
                          "    pm.environment.set(\"policyContract\", response.id);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "3ad671b1-6bf4-44e4-8ab3-960a96f5b585",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      },
                      {
                        "key": "X-XSRF-Header",
                        "type": "text",
                        "value": "PingFederate"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "https://{{pingfed}}:{{admin}}/pf-admin-api/v1/authenticationPolicyContracts"
                  },
                  "response": []
                }
              ],
              "_postman_id": "665dcf21-7087-4a8c-9686-fe390c8f5b39",
              "description": "Different Contracts used to provide different AuthN ceremonies for the Application.\n\nAdd the appropriate Contract to the App Mapping to trigger a different ceremony",
              "_postman_isSubFolder": true
            },
            {
              "name": "Create Local Identity Profile",
              "item": [
                {
                  "name": "LIP - Default Identity Profile",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "18654f1f-702d-45d1-b2e2-4742a2253d2e",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "4f14cf69-4857-4f29-b857-d41ad98f72a3",
                        "exec": [
                          "pm.test(\"Policy Contract (HTML) Created\", function () {",
                          "    pm.response.to.have.status(201);",
                          "    ",
                          "    var response = pm.response.json();",
                          "    pm.environment.set(\"defaultLIP\", response.id);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "d690eaad-dac2-453c-8fee-6be69b8f49fb",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      },
                      {
                        "key": "X-XSRF-Header",
                        "type": "text",
                        "value": "PingFederate"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"Default Identity Profile\",\n  \"apcId\": {\n    \"id\": \"{{policyContractHTML}}\"\n  },\n  \"authSources\": [\n    {\n      \"source\": \"Facebook\"\n    },\n    {\n      \"source\": \"Google\"\n    },\n    {\n      \"source\": \"QR Code\"\n    }\n  ],\n  \"authSourceUpdatePolicy\": {\n    \"storeAttributes\": false,\n    \"retainAttributes\": false,\n    \"updateAttributes\": false,\n    \"updateInterval\": 0\n  },\n  \"registrationConfig\": {\n    \"captchaEnabled\": false,\n    \"templateName\": \"local.identity.registration.html\"\n  },\n  \"fieldConfig\": {\n    \"fields\": [\n      {\n        \"type\": \"TEXT\",\n        \"id\": \"firstName\",\n        \"label\": \"First Name\",\n        \"registrationPageField\": true,\n        \"profilePageField\": true,\n        \"attributes\": {\n          \"Read-Only\": false,\n          \"Required\": false,\n          \"Unique ID Field\": false,\n          \"Mask Log Values\": false\n        },\n        \"defaultValue\": \"\"\n      },\n      {\n        \"type\": \"TEXT\",\n        \"id\": \"lastName\",\n        \"label\": \"Last Name\",\n        \"registrationPageField\": true,\n        \"profilePageField\": true,\n        \"attributes\": {\n          \"Read-Only\": false,\n          \"Required\": false,\n          \"Unique ID Field\": false,\n          \"Mask Log Values\": false\n        },\n        \"defaultValue\": \"\"\n      },\n      {\n        \"type\": \"EMAIL\",\n        \"id\": \"email\",\n        \"label\": \"Email Address\",\n        \"registrationPageField\": true,\n        \"profilePageField\": true,\n        \"attributes\": {\n          \"Read-Only\": false,\n          \"Required\": false,\n          \"Unique ID Field\": true,\n          \"Mask Log Values\": false\n        }\n      }\n    ]\n  },\n  \"emailVerificationConfig\": {\n    \"emailVerificationEnabled\": false\n  },\n  \"dataStoreConfig\": {\n    \"type\": \"LDAP\",\n    \"dataStoreRef\": {\n      \"id\": \"{{datastoreId}}\"\n    },\n    \"baseDn\": \"ou=people,{{baseDN}}\",\n    \"createPattern\": \"uid=${email}\",\n    \"objectClass\": \"inetOrgPerson\",\n    \"dataStoreMapping\": {\n      \"firstName\": {\n        \"type\": \"LDAP\",\n        \"name\": \"givenName\",\n        \"metadata\": {}\n      },\n      \"lastName\": {\n        \"type\": \"LDAP\",\n        \"name\": \"sn\",\n        \"metadata\": {}\n      },\n      \"email\": {\n        \"type\": \"LDAP\",\n        \"name\": \"mail\",\n        \"metadata\": {}\n      }\n    }\n  },\n  \"profileConfig\": {\n    \"deleteIdentityEnabled\": false,\n    \"templateName\": \"local.identity.profile.html\"\n  },\n  \"registrationEnabled\": true,\n  \"profileEnabled\": true\n}"
                    },
                    "url": "https://{{pingfed}}:{{admin}}/pf-admin-api/v1/localIdentity/identityProfiles"
                  },
                  "response": []
                }
              ],
              "_postman_id": "b879300f-3506-4cae-8cdc-12c6757f95fb",
              "description": "Creates a Default LIP for use in the AuthN Policies.\n\nThe LIP is configured:\n\n* Registration is enabled\n* Profile Management is enabled\n\n* Basic Attributes\n** First Name\n** Last Name\n** Email Address\n\n* AuthN Providers\n** Facebook\n** Google\n** QR Code (PID SDK)",
              "_postman_isSubFolder": true
            },
            {
              "name": "Create Adapter - HTML Form with LIP",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "18654f1f-702d-45d1-b2e2-4742a2253d2e",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "1e26e9c5-34dc-4319-94d4-f12ca92fd718",
                    "exec": [
                      "pm.test(\"HTML Form Adapter Created\", function () {",
                      "    pm.response.to.have.status(201);",
                      "    ",
                      "    var response = pm.response.json();",
                      "    pm.environment.set(\"adapterId\", response.id);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "7198e030-ebe4-4279-9f0a-cb2a594fd5ad",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  },
                  {
                    "key": "X-XSRF-Header",
                    "value": "PingFederate",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "    {\n      \"id\": \"HTMLFormWithLIP\",\n      \"name\": \"HTML Form with LIP\",\n      \"pluginDescriptorRef\": {\n        \"id\": \"com.pingidentity.adapters.htmlform.idp.HtmlFormIdpAuthnAdapter\"\n      },\n      \"parentRef\": {\n        \"id\": \"HTMLForm\"\n      },\n      \"configuration\": {\n        \"tables\": [\n          {\n            \"name\": \"Credential Validators\",\n            \"inherited\": true,\n            \"rows\": [\n              {\n                \"fields\": [\n                  {\n                    \"name\": \"Password Credential Validator Instance\",\n                    \"value\": \"PDPCV\"\n                  }\n                ]\n              }\n            ]\n          }\n        ],\n        \"fields\": [\n          {\n            \"name\": \"Challenge Retries\",\n            \"value\": \"3\",\n            \"inherited\": true\n          },\n          {\n            \"name\": \"Session State\",\n            \"value\": \"None\",\n            \"inherited\": true\n          },\n          {\n            \"name\": \"Session Timeout\",\n            \"value\": \"60\",\n            \"inherited\": true\n          },\n          {\n            \"name\": \"Session Max Timeout\",\n            \"value\": \"480\",\n            \"inherited\": true\n          },\n          {\n            \"name\": \"Allow Password Changes\",\n            \"value\": \"true\",\n            \"inherited\": true\n          },\n          {\n            \"name\": \"Password Management System\",\n            \"value\": \"\",\n            \"inherited\": true\n          },\n          {\n            \"name\": \"Enable 'Remember My Username'\",\n            \"value\": \"true\",\n            \"inherited\": true\n          },\n          {\n            \"name\": \"Enable 'This is My Device'\",\n            \"value\": \"true\",\n            \"inherited\": true\n          },\n          {\n            \"name\": \"Change Password Email Notification\",\n            \"value\": \"false\",\n            \"inherited\": true\n          },\n          {\n            \"name\": \"Show Password Expiring Warning\",\n            \"value\": \"true\",\n            \"inherited\": true\n          },\n          {\n            \"name\": \"Password Reset Type\",\n            \"value\": \"PingID\",\n            \"inherited\": true\n          },\n          {\n            \"name\": \"Account Unlock\",\n            \"value\": \"false\",\n            \"inherited\": true\n          },\n          {\n            \"name\": \"Local Identity Profile\",\n            \"value\": \"EOQhMUtT0mp9Rg6S\"\n          },\n          {\n            \"name\": \"Enable Username Recovery\",\n            \"value\": \"false\",\n            \"inherited\": true\n          },\n          {\n            \"name\": \"Login Template\",\n            \"value\": \"html.form.login.template.html\",\n            \"inherited\": true\n          },\n          {\n            \"name\": \"Logout Path\",\n            \"value\": \"\",\n            \"inherited\": true\n          },\n          {\n            \"name\": \"Logout Redirect\",\n            \"value\": \"\",\n            \"inherited\": true\n          },\n          {\n            \"name\": \"Logout Template\",\n            \"value\": \"idp.logout.success.page.template.html\",\n            \"inherited\": true\n          },\n          {\n            \"name\": \"Change Password Template\",\n            \"value\": \"html.form.change.password.template.html\",\n            \"inherited\": true\n          },\n          {\n            \"name\": \"Change Password Message Template\",\n            \"value\": \"html.form.message.template.html\",\n            \"inherited\": true\n          },\n          {\n            \"name\": \"Password Management System Message Template\",\n            \"value\": \"html.form.message.template.html\",\n            \"inherited\": true\n          },\n          {\n            \"name\": \"Change Password Email Template\",\n            \"value\": \"message-template-end-user-password-change.html\",\n            \"inherited\": true\n          },\n          {\n            \"name\": \"Expiring Password Warning Template\",\n            \"value\": \"html.form.password.expiring.notification.template.html\",\n            \"inherited\": true\n          },\n          {\n            \"name\": \"Threshold for Expiring Password Warning\",\n            \"value\": \"7\",\n            \"inherited\": true\n          },\n          {\n            \"name\": \"Snooze Interval for Expiring Password Warning\",\n            \"value\": \"24\",\n            \"inherited\": true\n          },\n          {\n            \"name\": \"Login Challenge Template\",\n            \"value\": \"html.form.login.challenge.template.html\",\n            \"inherited\": true\n          },\n          {\n            \"name\": \"'Remember My Username' Lifetime\",\n            \"value\": \"30\",\n            \"inherited\": true\n          },\n          {\n            \"name\": \"'This is My Device' Lifetime\",\n            \"value\": \"30\",\n            \"inherited\": true\n          },\n          {\n            \"name\": \"Allow Username Edits During Chaining\",\n            \"value\": \"false\",\n            \"inherited\": true\n          },\n          {\n            \"name\": \"Track Authentication Time\",\n            \"value\": \"true\",\n            \"inherited\": true\n          },\n          {\n            \"name\": \"Post-Password Change Re-Authentication Delay\",\n            \"value\": \"0\",\n            \"inherited\": true\n          },\n          {\n            \"name\": \"Password Reset Username Template\",\n            \"value\": \"forgot-password.html\",\n            \"inherited\": true\n          },\n          {\n            \"name\": \"Password Reset Code Template\",\n            \"value\": \"forgot-password-resume.html\",\n            \"inherited\": true\n          },\n          {\n            \"name\": \"Password Reset Template\",\n            \"value\": \"forgot-password-change.html\",\n            \"inherited\": true\n          },\n          {\n            \"name\": \"Password Reset Error Template\",\n            \"value\": \"forgot-password-error.html\",\n            \"inherited\": true\n          },\n          {\n            \"name\": \"Password Reset Success Template\",\n            \"value\": \"forgot-password-success.html\",\n            \"inherited\": true\n          },\n          {\n            \"name\": \"Account Unlock Template\",\n            \"value\": \"account-unlock.html\",\n            \"inherited\": true\n          },\n          {\n            \"name\": \"OTP Length\",\n            \"value\": \"8\",\n            \"inherited\": true\n          },\n          {\n            \"name\": \"OTP Time to Live\",\n            \"value\": \"10\",\n            \"inherited\": true\n          },\n          {\n            \"name\": \"PingID Properties\",\n            \"value\": \"eyJhbGciOiJkaXIiLCJlbmMiOiJBMTI4Q0JDLUhTMjU2Iiwia2lkIjoiV0J0eDlMYTFURSIsInZlcnNpb24iOiI5LjIuMS4xIiwiemlwIjoiREVGIn0..Jj5KyvcSVBn7LgDGxtZVWw.ceyQ45dmQyxgHXc8Z-06sWJiLEeRRZ1IKcd1TfvkgftX7Of2IP9WhCLPIwVPjm8SKxNJLr_hDD-Qo0gDmkc3HJnumIsZB8hu8k4LI4zzs44ONfQw8-7I5E7Bp6ppJ6luhUN4elpeCgjqnGmFSbJMICiX8Tf4PQqo0rKtdWtQJ-eG5KYIwjeG8K_atY2aTMz_j0NIXQC6i8BcAWLUsV8_tO7kKdnUEQ52pvpYdqKmm0INwiAa8nvZmvJC-y5B5wCWv4pWRqk3FC9gTnmu694XHxk5RkHsq67r0vH8_C86mE6xaXyXiYN_n-i5i6PS9p-X2tFQoh6FwxoWZmRgc60FCAYZgY5AK7WE7Ad5AVmOEfPW_NWbNYI8PGJinCSJ6om1X44RBAisFvKmnozk-Urvhbdlnzg5sVNcskMLnzMzJpIB28Bhq1_hSlipmf4NUZ8c.UHp2ZWrPJqFhZvkRuLvutw\",\n            \"inherited\": true\n          },\n          {\n            \"name\": \"Require Verified Email\",\n            \"value\": \"false\",\n            \"inherited\": true\n          },\n          {\n            \"name\": \"Username Recovery Template\",\n            \"value\": \"username.recovery.template.html\",\n            \"inherited\": true\n          },\n          {\n            \"name\": \"Username Recovery Info Template\",\n            \"value\": \"username.recovery.info.template.html\",\n            \"inherited\": true\n          },\n          {\n            \"name\": \"Username Recovery Email Template\",\n            \"value\": \"message-template-username-recovery.html\",\n            \"inherited\": true\n          },\n          {\n            \"name\": \"CAPTCHA for Authentication\",\n            \"value\": \"false\",\n            \"inherited\": true\n          },\n          {\n            \"name\": \"CAPTCHA for Password change\",\n            \"value\": \"false\",\n            \"inherited\": true\n          },\n          {\n            \"name\": \"CAPTCHA for Password Reset\",\n            \"value\": \"false\",\n            \"inherited\": true\n          },\n          {\n            \"name\": \"CAPTCHA for Username recovery\",\n            \"value\": \"false\",\n            \"inherited\": true\n          }\n        ]\n      },\n      \"attributeContract\": {\n        \"coreAttributes\": [\n          {\n            \"name\": \"policy.action\",\n            \"masked\": false,\n            \"pseudonym\": false\n          },\n          {\n            \"name\": \"username\",\n            \"masked\": false,\n            \"pseudonym\": true\n          }\n        ],\n        \"extendedAttributes\": [\n          {\n            \"name\": \"entryUUID\",\n            \"masked\": false,\n            \"pseudonym\": false\n          },\n          {\n            \"name\": \"mail\",\n            \"masked\": false,\n            \"pseudonym\": false\n          }\n        ],\n        \"maskOgnlValues\": false,\n        \"inherited\": true\n      },\n      \"attributeMapping\": {\n        \"attributeSources\": [],\n        \"attributeContractFulfillment\": {\n          \"entryUUID\": {\n            \"source\": {\n              \"type\": \"ADAPTER\"\n            },\n            \"value\": \"entryUUID\"\n          },\n          \"mail\": {\n            \"source\": {\n              \"type\": \"ADAPTER\"\n            },\n            \"value\": \"mail\"\n          },\n          \"policy.action\": {\n            \"source\": {\n              \"type\": \"ADAPTER\"\n            },\n            \"value\": \"policy.action\"\n          },\n          \"username\": {\n            \"source\": {\n              \"type\": \"ADAPTER\"\n            },\n            \"value\": \"username\"\n          }\n        },\n        \"issuanceCriteria\": {\n          \"conditionalCriteria\": []\n        },\n        \"inherited\": true\n      }\n    }"
                },
                "url": "https://{{pingfed}}:{{admin}}/pf-admin-api/v1/idp/adapters"
              },
              "response": []
            },
            {
              "name": "Enable IdP AuthN Policies",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "18654f1f-702d-45d1-b2e2-4742a2253d2e",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "4f14cf69-4857-4f29-b857-d41ad98f72a3",
                    "exec": [
                      "pm.test(\"IdP AuthN Policies Enabled\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "86adf6de-0d0a-49df-a9c0-eba767be9e49",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  },
                  {
                    "key": "X-XSRF-Header",
                    "value": "PingFederate",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"enableIdpAuthnSelection\": true,\n  \"enableSpAuthnSelection\": false\n}"
                },
                "url": "https://{{pingfed}}:{{admin}}/pf-admin-api/v1/authenticationPolicies/settings"
              },
              "response": []
            }
          ],
          "_postman_id": "abb1ca02-31a8-4a5b-bd24-c2b0bfd27efd",
          "_postman_isSubFolder": true
        },
        {
          "name": "OAuth Config - AS Settings",
          "item": [
            {
              "name": "Scope Management",
              "item": [
                {
                  "name": "Common OIDC Scopes",
                  "item": [
                    {
                      "name": "OIDC Scope - openid",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "d811d801-bc60-4dae-acfc-2718352313f9",
                            "exec": [
                              "pm.test(\"Scope (openid) Created\", function () {",
                              "    pm.response.to.have.status(201);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "_postman_id": "7a576f97-e058-4225-8c91-0cb30a974e36",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "X-XSRF-Header",
                            "value": "pingfederate",
                            "type": "text"
                          },
                          {
                            "key": "Content-Type",
                            "value": "application/json",
                            "type": "text"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"openid\",\n  \"description\": \"Used to authenticated with OIDC\",\n  \"dynamic\": \"false\"\n}"
                        },
                        "url": "https://{{pingfed}}:{{admin}}/pf-admin-api/v1/oauth/authServerSettings/scopes/commonScopes"
                      },
                      "response": []
                    },
                    {
                      "name": "OIDC Scope - address",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "58ab8f47-2136-4bc6-b45f-f987aeaa2b92",
                            "exec": [
                              "pm.test(\"Scope (address) Created\", function () {",
                              "    pm.response.to.have.status(201);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "_postman_id": "0db3d412-a8f9-4666-885c-60590ca14a6f",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "X-XSRF-Header",
                            "type": "text",
                            "value": "pingfederate"
                          },
                          {
                            "key": "Content-Type",
                            "value": "application/json",
                            "type": "text"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"address\",\n  \"description\": \"Used to access your postal address\",\n  \"dynamic\": \"false\"\n}"
                        },
                        "url": "https://{{pingfed}}:{{admin}}/pf-admin-api/v1/oauth/authServerSettings/scopes/commonScopes"
                      },
                      "response": []
                    },
                    {
                      "name": "OIDC Scope - emai",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "1cd8f58d-2dc3-4cf3-88b8-d678390c12ca",
                            "exec": [
                              "pm.test(\"Scope (email) Created\", function () {",
                              "    pm.response.to.have.status(201);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "_postman_id": "df0510b8-0226-41f1-88ac-7577278a60dd",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "X-XSRF-Header",
                            "type": "text",
                            "value": "pingfederate"
                          },
                          {
                            "key": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"email\",\n  \"description\": \"Used to access your email address\",\n  \"dynamic\": \"false\"\n}"
                        },
                        "url": "https://{{pingfed}}:{{admin}}/pf-admin-api/v1/oauth/authServerSettings/scopes/commonScopes"
                      },
                      "response": []
                    },
                    {
                      "name": "OIDC Scope - phone",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "1bc376ac-f0f6-41dc-a893-bf17e158fd8b",
                            "exec": [
                              "pm.test(\"Scope (phone) Created\", function () {",
                              "    pm.response.to.have.status(201);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "_postman_id": "142eceb6-0e9f-465a-a700-e6304412e7b8",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "X-XSRF-Header",
                            "type": "text",
                            "value": "pingfederate"
                          },
                          {
                            "key": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"phone\",\n  \"description\": \"Used to access your phone number\",\n  \"dynamic\": \"false\"\n}"
                        },
                        "url": "https://{{pingfed}}:{{admin}}/pf-admin-api/v1/oauth/authServerSettings/scopes/commonScopes"
                      },
                      "response": []
                    },
                    {
                      "name": "OIDC Scope - profile",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "186cebf3-76f8-4a06-aaae-793276f77cbf",
                            "exec": [
                              "pm.test(\"Scope (profile) Created\", function () {",
                              "    pm.response.to.have.status(201);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "_postman_id": "6597fd7a-a76b-4622-aa4d-23434bb79964",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "X-XSRF-Header",
                            "type": "text",
                            "value": "pingfederate"
                          },
                          {
                            "key": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"profile\",\n  \"description\": \"Used to access your profile\",\n  \"dynamic\": \"false\"\n}"
                        },
                        "url": "https://{{pingfed}}:{{admin}}/pf-admin-api/v1/oauth/authServerSettings/scopes/commonScopes"
                      },
                      "response": []
                    }
                  ],
                  "_postman_id": "02c762e2-da34-42ec-9213-88d9629bd3f1",
                  "_postman_isSubFolder": true
                },
                {
                  "name": "Exclusive Scopes",
                  "item": [
                    {
                      "name": "Scope - PingDirectory REST API",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "e70d9490-f1fa-4ef6-8231-a3d86fe7520d",
                            "exec": [
                              "pm.test(\"Scope (pd:dir:access) Created\", function () {",
                              "    pm.response.to.have.status(201);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "_postman_id": "86a4d272-4049-4725-b63e-87f60d0e6133",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "X-XSRF-Header",
                            "type": "text",
                            "value": "pingfederate"
                          },
                          {
                            "key": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"pd:dir:access\",\n  \"description\": \"Used to access the PingDirectory REST API\",\n  \"dynamic\": \"false\"\n}"
                        },
                        "url": "https://{{pingfed}}:{{admin}}/pf-admin-api/v1/oauth/authServerSettings/scopes/exclusiveScopes"
                      },
                      "response": []
                    },
                    {
                      "name": "Scope - PingDirectory Consent API (User)",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "fe6950df-b6ca-4b11-b357-0a560cd8ff02",
                            "exec": [
                              "pm.test(\"Scope (pd:consents:unpriv) Created\", function () {",
                              "    pm.response.to.have.status(201);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "_postman_id": "d778ca6b-7aed-4a49-ac4b-b8765d1a4761",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "X-XSRF-Header",
                            "value": "pingfederate",
                            "type": "text"
                          },
                          {
                            "key": "Content-Type",
                            "value": "application/json",
                            "type": "text"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"pd:consents:unpriv\",\n  \"description\": \"Used to access the PingDirectory Consent API (User)\",\n  \"dynamic\": \"false\"\n}"
                        },
                        "url": "https://{{pingfed}}:{{admin}}/pf-admin-api/v1/oauth/authServerSettings/scopes/exclusiveScopes"
                      },
                      "response": []
                    },
                    {
                      "name": "Scope - PingDirectory Consent API (Admin)",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "13fbd049-2577-49a8-957a-232556eac771",
                            "exec": [
                              "pm.test(\"Scope (pd:consents:priv) Created\", function () {",
                              "    pm.response.to.have.status(201);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "_postman_id": "660203c9-025e-4cd3-83a3-5987d7b0bd9c",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "X-XSRF-Header",
                            "type": "text",
                            "value": "pingfederate"
                          },
                          {
                            "key": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"pd:consents:priv\",\n  \"description\": \"Used to access the PingDirectory Consent API (Admin)\",\n  \"dynamic\": \"false\"\n}"
                        },
                        "url": "https://{{pingfed}}:{{admin}}/pf-admin-api/v1/oauth/authServerSettings/scopes/exclusiveScopes"
                      },
                      "response": []
                    },
                    {
                      "name": "Scope - PingDirectory Delegated Admin",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "75912089-fa51-4c0b-85a9-d7907a66e68a",
                            "exec": [
                              "pm.test(\"Scope (pf:client:reg) Created\", function () {",
                              "    pm.response.to.have.status(201);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "_postman_id": "b0984141-8a8b-4193-9b1d-9e8289f0cab5",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "X-XSRF-Header",
                            "type": "text",
                            "value": "pingfederate"
                          },
                          {
                            "key": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"urn:pingidentity:directory-delegated-admin\",\n  \"description\": \"Used to access the PD Delegated Admin app\",\n  \"dynamic\": \"false\"\n}"
                        },
                        "url": "https://{{pingfed}}:{{admin}}/pf-admin-api/v1/oauth/authServerSettings/scopes/exclusiveScopes"
                      },
                      "response": []
                    },
                    {
                      "name": "Scope - PingFederate Client Registration",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "75912089-fa51-4c0b-85a9-d7907a66e68a",
                            "exec": [
                              "pm.test(\"Scope (pf:client:reg) Created\", function () {",
                              "    pm.response.to.have.status(201);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "_postman_id": "82833581-80dc-4436-9abb-2d1a35a2d425",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "X-XSRF-Header",
                            "type": "text",
                            "value": "pingfederate"
                          },
                          {
                            "key": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"pf:client:reg\",\n  \"description\": \"Used to dynamically register clients (RFC 7591)\",\n  \"dynamic\": \"false\"\n}"
                        },
                        "url": "https://{{pingfed}}:{{admin}}/pf-admin-api/v1/oauth/authServerSettings/scopes/exclusiveScopes"
                      },
                      "response": []
                    }
                  ],
                  "_postman_id": "cc07370b-a0a2-4ea9-b117-968f4e88fdba",
                  "description": "Added Exclusive scopes used by Ping integrations\n\n* PingDirectory REST API\n* Consent API\n** Unpriviledged\n** Priviledged\n* Delegated Admin App\n* PingAccess Admin SSO (??)",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "b1f49a86-b5a4-4fbb-92cd-b11407439496",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "7a9e0dd1-d869-4b1e-a587-85725582d8e5",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "_postman_isSubFolder": true
                }
              ],
              "_postman_id": "37997d04-3ef1-4805-b44e-4eb6666f459e",
              "description": "Creates a base set of scopes for OIDC and Ping integrations",
              "_postman_isSubFolder": true
            },
            {
              "name": "Grant Mapping",
              "item": [
                {
                  "name": "Create APC mapping - HTML Form",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "736f229e-688f-4dcf-b4bb-641f6c1e7dde",
                        "exec": [
                          "pm.test(\"Grant Mapping (HTML) Created\", function () {",
                          "    pm.response.to.have.status(201);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "bde0c544-2916-4d07-92e7-9b8db200eac3",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      },
                      {
                        "key": "X-XSRF-Header",
                        "type": "text",
                        "value": "pingfederate"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "    {\n      \"attributeSources\": [],\n      \"attributeContractFulfillment\": {\n        \"USER_NAME\": {\n          \"source\": {\n            \"type\": \"AUTHENTICATION_POLICY_CONTRACT\"\n          },\n          \"value\": \"mail\"\n        },\n        \"USER_KEY\": {\n          \"source\": {\n            \"type\": \"AUTHENTICATION_POLICY_CONTRACT\"\n          },\n          \"value\": \"entryUUID\"\n        }\n      },\n      \"issuanceCriteria\": {\n        \"conditionalCriteria\": []\n      },\n      \"authenticationPolicyContractRef\": {\n        \"id\": \"{{policyContractHTML}}\"\n      }\n    }"
                    },
                    "url": "https://{{pingfed}}:{{admin}}/pf-admin-api/v1/oauth/authenticationPolicyContractMappings"
                  },
                  "response": []
                },
                {
                  "name": "Create APC mapping - MFA",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "f7b2990b-1ab5-4e76-a010-604e9639cca9",
                        "exec": [
                          "pm.test(\"Grant Mapping (MFA) Created\", function () {",
                          "    pm.response.to.have.status(201);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "e3ec788d-93ff-4f85-ba32-b914afbff228",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      },
                      {
                        "key": "X-XSRF-Header",
                        "type": "text",
                        "value": "pingfederate"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "    {\n      \"attributeSources\": [],\n      \"attributeContractFulfillment\": {\n        \"USER_NAME\": {\n          \"source\": {\n            \"type\": \"AUTHENTICATION_POLICY_CONTRACT\"\n          },\n          \"value\": \"mail\"\n        },\n        \"USER_KEY\": {\n          \"source\": {\n            \"type\": \"AUTHENTICATION_POLICY_CONTRACT\"\n          },\n          \"value\": \"entryUUID\"\n        }\n      },\n      \"issuanceCriteria\": {\n        \"conditionalCriteria\": []\n      },\n      \"authenticationPolicyContractRef\": {\n        \"id\": \"{{policyContractMFA}}\"\n      }\n    }"
                    },
                    "url": "https://{{pingfed}}:{{admin}}/pf-admin-api/v1/oauth/authenticationPolicyContractMappings"
                  },
                  "response": []
                }
              ],
              "_postman_id": "cef895bd-7729-4d5d-9bc5-c3189d5cc374",
              "description": "Configuration of Grant Management\n\n* Default AuthN Policy Contract",
              "_postman_isSubFolder": true
            },
            {
              "name": "Token Managers",
              "item": [
                {
                  "name": "Create JWT (HTML) Token Manager",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "3639a176-e3c5-4e1f-babc-d998991cfe6b",
                        "exec": [
                          "pm.test(\"Access Token Manager (JWT-HTML) Created\", function () {",
                          "    pm.response.to.have.status(201);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "3acae614-6c1c-44b2-89c7-9ee72255a866",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      },
                      {
                        "key": "X-XSRF-Header",
                        "type": "text",
                        "value": "pingfederate"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "    {\n      \"id\": \"jwtHTML\",\n      \"name\": \"JWT-HTML\",\n      \"pluginDescriptorRef\": {\n        \"id\": \"com.pingidentity.pf.access.token.management.plugins.JwtBearerAccessTokenManagementPlugin\" },\n      \"configuration\": {\n        \"tables\": [\n          {\n            \"name\": \"Symmetric Keys\",\n            \"rows\": [\n              {\n                \"fields\": [\n                  {\n                    \"name\": \"Key ID\",\n                    \"value\": \"sym\"\n                  },\n                  {\n                    \"name\": \"Key\",\n                    \"value\": \"MkZlZGVyYXRlTTByZTJGZWRlcmF0ZU0wcmUyRmVkZXJhdGVNMHJl\"\n                  },\n                  {\n                    \"name\": \"Encoding\",\n                    \"value\": \"b64u\"\n                  }\n                ]\n              }\n            ]\n          }\n        ],\n        \"fields\": [\n          {\n            \"name\": \"Token Lifetime\",\n            \"value\": \"120\"\n          },\n          {\n            \"name\": \"JWS Algorithm\",\n            \"value\": \"HS256\"\n          },\n          {\n            \"name\": \"Active Symmetric Key ID\",\n            \"value\": \"sym\"\n          }\n        ]\n      },\n      \"attributeContract\": {\n        \"coreAttributes\": [],\n        \"extendedAttributes\": [\n          {\n            \"name\": \"sub\"\n          }\n        ]\n      },\n      \"selectionSettings\": {\n        \"resourceUris\": []\n      },\n      \"accessControlSettings\": {\n        \"restrictClients\": false,\n        \"allowedClients\": []\n      },\n      \"sessionValidationSettings\": {\n        \"checkValidAuthnSession\": false,\n        \"checkSessionRevocationStatus\": false,\n        \"updateAuthnSessionActivity\": false\n      }\n    }"
                    },
                    "url": "https://{{pingfed}}:{{admin}}/pf-admin-api/v1/oauth/accessTokenManagers"
                  },
                  "response": []
                },
                {
                  "name": "Create JWT (MFA) Token Manager",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "ccbbf694-929a-43a7-a81a-cb8c87449a9e",
                        "exec": [
                          "pm.test(\"Access Token Manager (JWT-MFA) Created\", function () {",
                          "    pm.response.to.have.status(201);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "fd7542d6-b1cb-4c92-aeae-e6eb79b3c388",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      },
                      {
                        "key": "X-XSRF-Header",
                        "type": "text",
                        "value": "pingfederate"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "    {\n      \"id\": \"jwtMFA\",\n      \"name\": \"JWT-MFA\",\n      \"pluginDescriptorRef\": {\n        \"id\": \"com.pingidentity.pf.access.token.management.plugins.JwtBearerAccessTokenManagementPlugin\" },\n      \"configuration\": {\n        \"tables\": [\n          {\n            \"name\": \"Symmetric Keys\",\n            \"rows\": [\n              {\n                \"fields\": [\n                  {\n                    \"name\": \"Key ID\",\n                    \"value\": \"sym\"\n                  },\n                  {\n                    \"name\": \"Key\",\n                    \"value\": \"MkZlZGVyYXRlTTByZTJGZWRlcmF0ZU0wcmUyRmVkZXJhdGVNMHJl\"\n                  },\n                  {\n                    \"name\": \"Encoding\",\n                    \"value\": \"b64u\"\n                  }\n                ]\n              }\n            ]\n          }\n        ],\n        \"fields\": [\n          {\n            \"name\": \"Token Lifetime\",\n            \"value\": \"120\"\n          },\n          {\n            \"name\": \"JWS Algorithm\",\n            \"value\": \"HS256\"\n          },\n          {\n            \"name\": \"Active Symmetric Key ID\",\n            \"value\": \"sym\"\n          }\n        ]\n      },\n      \"attributeContract\": {\n        \"coreAttributes\": [],\n        \"extendedAttributes\": [\n          {\n            \"name\": \"sub\"\n          }\n        ]\n      },\n      \"selectionSettings\": {\n        \"resourceUris\": []\n      },\n      \"accessControlSettings\": {\n        \"restrictClients\": false,\n        \"allowedClients\": []\n      },\n      \"sessionValidationSettings\": {\n        \"checkValidAuthnSession\": false,\n        \"checkSessionRevocationStatus\": false,\n        \"updateAuthnSessionActivity\": false\n      }\n    }"
                    },
                    "url": "https://{{pingfed}}:{{admin}}/pf-admin-api/v1/oauth/accessTokenManagers"
                  },
                  "response": []
                }
              ],
              "_postman_id": "e75b5ca0-5cdc-45f2-87b7-d8ffaec848c8",
              "description": "Configures the OAuth Token Mapping settings\n\n* Adds Default JWT Token Manager (Symmetric Key)\n* Adds AuthN Policy Contract Mapping",
              "_postman_isSubFolder": true
            },
            {
              "name": "Token Mappings",
              "item": [
                {
                  "name": "Create JWT (HTML) Token Mapping to AuthN Policy Contract",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "2b96e74c-7011-49d6-add6-37c1a46ed2c6",
                        "exec": [
                          "pm.test(\"Access Token Mapping (JWT-HTML) Created\", function () {",
                          "    pm.response.to.have.status(201);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "ae83e160-13fd-4fef-81f0-bd8816453e2f",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      },
                      {
                        "key": "X-XSRF-Header",
                        "type": "text",
                        "value": "pingfederate"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"context\": {\n    \"type\": \"AUTHENTICATION_POLICY_CONTRACT\",\n    \"contextRef\": {\n      \"id\": \"{{policyContractHTML}}\"\n    }\n  },\n  \"accessTokenManagerRef\": {\n    \"id\": \"jwtHTML\"\n  },\n  \"attributeContractFulfillment\": {\n    \"sub\": {\n      \"source\": {\n        \"type\": \"AUTHENTICATION_POLICY_CONTRACT\"\n      },\n      \"value\": \"entryUUID\"\n    }\n  }\n}"
                    },
                    "url": "https://{{pingfed}}:{{admin}}/pf-admin-api/v1/oauth/accessTokenMappings"
                  },
                  "response": []
                },
                {
                  "name": "Create JWT (MFA) Token Mapping to AuthN Policy Contract",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "869afe02-b9a6-490f-80c5-dc003eca0285",
                        "exec": [
                          "pm.test(\"Access Token Mapping (JWT-MFA) Created\", function () {",
                          "    pm.response.to.have.status(201);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "c556659b-3ad8-4804-a73b-e8dfede5ce46",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      },
                      {
                        "key": "X-XSRF-Header",
                        "type": "text",
                        "value": "pingfederate"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"context\": {\n    \"type\": \"AUTHENTICATION_POLICY_CONTRACT\",\n    \"contextRef\": {\n      \"id\": \"{{policyContractMFA}}\"\n    }\n  },\n  \"accessTokenManagerRef\": {\n    \"id\": \"jwtMFA\"\n  },\n  \"attributeContractFulfillment\": {\n    \"sub\": {\n      \"source\": {\n        \"type\": \"AUTHENTICATION_POLICY_CONTRACT\"\n      },\n      \"value\": \"entryUUID\"\n    }\n  }\n}"
                    },
                    "url": "https://{{pingfed}}:{{admin}}/pf-admin-api/v1/oauth/accessTokenMappings"
                  },
                  "response": []
                }
              ],
              "_postman_id": "7575c61f-3160-4d0e-ac81-9b1616640075",
              "_postman_isSubFolder": true
            },
            {
              "name": "OIDC Policy",
              "item": [
                {
                  "name": "Create OIDC Policy (HTML)",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "4aa206d6-cc0b-49c2-83a2-ddfdd4de1b6b",
                        "exec": [
                          "pm.test(\"OIDC Policy (HTML) Created\", function () {",
                          "    pm.response.to.have.status(201);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "55084402-9073-4605-ba54-1510714c5910",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      },
                      {
                        "key": "X-XSRF-Header",
                        "type": "text",
                        "value": "pingdfederate"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "    {\n      \"id\": \"OIDCPolicyHTML\",\n      \"name\": \"OIDC Policy (HTML)\",\n      \"idTokenLifetime\": 5,\n      \"attributeContract\": {\n        \"coreAttributes\": [\n          {\n            \"name\": \"sub\"\n          }\n        ],\n        \"extendedAttributes\": []\n      },\n      \"attributeMapping\": {\n        \"attributeSources\": [],\n        \"attributeContractFulfillment\": {\n          \"sub\": {\n            \"source\": {\n              \"type\": \"TOKEN\"\n            },\n            \"value\": \"sub\"\n          }\n        },\n        \"issuanceCriteria\": {\n          \"conditionalCriteria\": []\n        }\n      },\n      \"includeSriInIdToken\": false,\n      \"includeUserInfoInIdToken\": false,\n      \"includeSHashInIdToken\": false,\n      \"accessTokenManagerRef\": {\n        \"id\": \"jwtHTML\"\n    }\n    }"
                    },
                    "url": "https://{{pingfed}}:{{admin}}/pf-admin-api/v1/oauth/openIdConnect/policies"
                  },
                  "response": []
                },
                {
                  "name": "Create OIDC Policy (MFA)",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "6e05969e-5670-4966-9136-02e62a2dc299",
                        "exec": [
                          "pm.test(\"OIDC Policy (MFA) Created\", function () {",
                          "    pm.response.to.have.status(201);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "b60f358f-4661-4dbb-98d5-d0818b18f342",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      },
                      {
                        "key": "X-XSRF-Header",
                        "type": "text",
                        "value": "pingdfederate"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "    {\n      \"id\": \"OIDCPolicyMFA\",\n      \"name\": \"OIDC Policy (MFA)\",\n      \"idTokenLifetime\": 5,\n      \"attributeContract\": {\n        \"coreAttributes\": [\n          {\n            \"name\": \"sub\"\n          }\n        ],\n        \"extendedAttributes\": []\n      },\n      \"attributeMapping\": {\n        \"attributeSources\": [],\n        \"attributeContractFulfillment\": {\n          \"sub\": {\n            \"source\": {\n              \"type\": \"TOKEN\"\n            },\n            \"value\": \"sub\"\n          }\n        },\n        \"issuanceCriteria\": {\n          \"conditionalCriteria\": []\n        }\n      },\n      \"includeSriInIdToken\": false,\n      \"includeUserInfoInIdToken\": false,\n      \"includeSHashInIdToken\": false,\n      \"accessTokenManagerRef\": {\n        \"id\": \"jwtMFA\"\n    }\n    }"
                    },
                    "url": "https://{{pingfed}}:{{admin}}/pf-admin-api/v1/oauth/openIdConnect/policies"
                  },
                  "response": []
                }
              ],
              "_postman_id": "9a672a20-12f5-410d-810b-a96e69dc7d84",
              "description": "Creates a basic OIDC Policy.\n\nContains only the `sub` claim",
              "_postman_isSubFolder": true
            }
          ],
          "_postman_id": "8b3b3ef2-5114-4093-954e-21ad2faea31b",
          "description": "This folder contains calls to configure the AS Server:\n\n**Scope Management**\n* Default OIDC Scopes\n* Exclusive Ping App scopes\n\n**Grant Mapping**\n* Default AuthN Policy Contract Mapping\n\n**Access Tokens**\n* JWT Access Token Manager\n* Default AuthN Policy Contract Mapping\n",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "8850f13f-df87-4530-b114-0686c9ccd5c8",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "688e1869-1e7f-43e7-9554-57942c2a89e2",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        }
      ],
      "_postman_id": "853f49ad-5616-468f-9e4f-4870151c3ef2",
      "description": "This set of calls can be used to fully configure a Ping DevOps `10-docker-standalone` PingFederate instance. You can point this to any PingDirectory instance in your Environment {{pingdir}}\n\nThe following components will be created:\nDatastore\n* PingDirectory\nPCV\n* LDAP\nIdP Adapter\n* HTML Form\nIdP AuthN Policy Contract\nIdP Authentication Policy\n* HTML Form --> Policy Contract\nOAuth Scopes\n* Common - Default OIDC\n* Exclusive - Ping integrations\nToken Mapping\n* AuthN Policy Contract\nToken Manager\n* Default JWT (Symmetric Key)\nToken Mapping\n* AuthN Policy Contract --> Default JWT\n\nThese can then be used to build specific Use Cases via the API\n",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "0c4b05a3-3dfe-4295-ab65-f55c3865a543",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        },
        {
          "listen": "test",
          "script": {
            "id": "4fa48226-005d-4976-8b39-27ad1faecb14",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        }
      ]
    },
    {
      "name": "Use Cases",
      "item": [
        {
          "name": "Create Default AuthN Ceremonies",
          "item": [
            {
              "name": "Get Policy Contract - HTMLForm",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8b058b38-3a70-42c3-820d-2841e6e8b6f6",
                    "exec": [
                      "pm.test(\"Policy Contracts retrieved\", function () {",
                      "    pm.response.to.have.status(200);",
                      "    ",
                      "    var response = pm.response.json();",
                      "    pm.environment.set(\"policyContractHTML\", response.items[0].id);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "0d505e86-bae3-4f6f-8f39-7239d4c3043a",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "X-XSRF-Header",
                    "type": "text",
                    "value": "pingfederate"
                  }
                ],
                "url": {
                  "raw": "https://{{pingfed}}:{{admin}}/pf-admin-api/v1/authenticationPolicyContracts?filter=HTML",
                  "protocol": "https",
                  "host": [
                    "{{pingfed}}"
                  ],
                  "port": "{{admin}}",
                  "path": [
                    "pf-admin-api",
                    "v1",
                    "authenticationPolicyContracts"
                  ],
                  "query": [
                    {
                      "key": "filter",
                      "value": "HTML"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Get Policy Contract - MFA",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8b058b38-3a70-42c3-820d-2841e6e8b6f6",
                    "exec": [
                      "pm.test(\"Policy Contracts retrieved\", function () {",
                      "    pm.response.to.have.status(200);",
                      "    ",
                      "    var response = pm.response.json();",
                      "    pm.environment.set(\"policyContractMFA\", response.items[0].id);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "a77cc2dc-a54d-41bc-9818-665328d18cf9",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "X-XSRF-Header",
                    "type": "text",
                    "value": "pingfederate"
                  }
                ],
                "url": {
                  "raw": "https://{{pingfed}}:{{admin}}/pf-admin-api/v1/authenticationPolicyContracts?filter=MFA",
                  "protocol": "https",
                  "host": [
                    "{{pingfed}}"
                  ],
                  "port": "{{admin}}",
                  "path": [
                    "pf-admin-api",
                    "v1",
                    "authenticationPolicyContracts"
                  ],
                  "query": [
                    {
                      "key": "filter",
                      "value": "MFA"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Create Default Policy",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "43c897b9-d3ca-403f-83f8-ae397e06abd4",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "7cbf9465-6740-4dd7-a6f1-89e0dbeefc48",
                    "exec": [
                      "pm.test(\"Default AuthN Policy Created\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "7a7ad4df-b686-49ac-bb72-c6f1380feb82",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  },
                  {
                    "key": "X-XSRF-Header",
                    "type": "text",
                    "value": "PingFederate"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"failIfNoSelection\": false,\n  \"authnSelectionTrees\": [\n    {\n      \"rootNode\": {\n        \"action\": {\n          \"type\": \"AUTHN_SOURCE\",\n          \"authenticationSource\": {\n            \"type\": \"IDP_ADAPTER\",\n            \"sourceRef\": {\n              \"id\": \"HTMLForm\"\n            }\n          }\n        },\n        \"children\": [\n          {\n            \"action\": {\n              \"type\": \"DONE\",\n              \"context\": \"Fail\"\n            }\n          },\n          {\n            \"action\": {\n              \"type\": \"APC_MAPPING\",\n              \"context\": \"Success\",\n              \"authenticationPolicyContractRef\": {\n                \"id\": \"{{policyContractHTML}}\"\n              },\n              \"attributeMapping\": {\n                \"attributeSources\": [],\n                \"attributeContractFulfillment\": {\n                  \"entryUUID\": {\n                    \"source\": {\n                      \"type\": \"ADAPTER\",\n                      \"id\": \"HTMLForm\"\n                    },\n                    \"value\": \"entryUUID\"\n                  },\n                  \"mail\": {\n                    \"source\": {\n                      \"type\": \"ADAPTER\",\n                      \"id\": \"HTMLForm\"\n                    },\n                    \"value\": \"mail\"\n                  },\n                  \"subject\": {\n                    \"source\": {\n                      \"type\": \"ADAPTER\",\n                      \"id\": \"HTMLForm\"\n                    },\n                    \"value\": \"username\"\n                  }\n                },\n                \"issuanceCriteria\": {\n                  \"conditionalCriteria\": []\n                }\n              }\n            }\n          }\n        ]\n      },\n      \"name\": \"HTML Form\",\n      \"enabled\": true\n    },\n            {\n            \"rootNode\": {\n                \"action\": {\n                    \"type\": \"AUTHN_SOURCE\",\n                    \"authenticationSource\": {\n                        \"type\": \"IDP_ADAPTER\",\n                        \"sourceRef\": {\n                            \"id\": \"HTMLForm\"\n                        }\n                    }\n                },\n                \"children\": [\n                    {\n                        \"action\": {\n                            \"type\": \"DONE\",\n                            \"context\": \"Fail\"\n                        }\n                    },\n                    {\n                        \"action\": {\n                            \"type\": \"AUTHN_SOURCE\",\n                            \"context\": \"Success\",\n                            \"authenticationSource\": {\n                                \"type\": \"IDP_ADAPTER\",\n                                \"sourceRef\": {\n                                    \"id\": \"PingID\"\n                                }\n                            },\n                            \"inputUserIdMapping\": {\n                                \"source\": {\n                                    \"type\": \"ADAPTER\",\n                                    \"id\": \"HTMLForm\"\n                                },\n                                \"value\": \"username\"\n                            }\n                        },\n                        \"children\": [\n                            {\n                                \"action\": {\n                                    \"type\": \"DONE\",\n                                    \"context\": \"Fail\"\n                                }\n                            },\n                            {\n                                \"action\": {\n                                    \"type\": \"APC_MAPPING\",\n                                    \"context\": \"Success\",\n                                    \"authenticationPolicyContractRef\": {\n                                        \"id\": \"{{policyContractMFA}}\"\n                                    },\n                                    \"attributeMapping\": {\n                                        \"attributeSources\": [],\n                                        \"attributeContractFulfillment\": {\n                                            \"entryUUID\": {\n                                                \"source\": {\n                                                    \"type\": \"ADAPTER\",\n                                                    \"id\": \"HTMLForm\"\n                                                },\n                                                \"value\": \"entryUUID\"\n                                            },\n                                            \"mail\": {\n                                                \"source\": {\n                                                    \"type\": \"ADAPTER\",\n                                                    \"id\": \"HTMLForm\"\n                                                },\n                                                \"value\": \"mail\"\n                                            },\n                                            \"subject\": {\n                                                \"source\": {\n                                                    \"type\": \"ADAPTER\",\n                                                    \"id\": \"HTMLForm\"\n                                                },\n                                                \"value\": \"entryUUID\"\n                                            }\n                                        },\n                                        \"issuanceCriteria\": {\n                                            \"conditionalCriteria\": []\n                                        }\n                                    }\n                                }\n                            }\n                        ]\n                    }\n                ]\n            },\n            \"name\": \"MFA Required\",\n            \"enabled\": true\n        }\n  ],\n  \"defaultAuthenticationSources\": [],\n  \"trackedHttpParameters\": []\n}"
                },
                "url": "https://{{pingfed}}:{{admin}}/pf-admin-api/v1/authenticationPolicies/default"
              },
              "response": []
            }
          ],
          "_postman_id": "2b497726-fab8-4160-ab2e-b0aa04fbc193",
          "description": "Creates a set of Authentication experiences:\n\n* Basic HTML Form \n* HTML Form --> MFA (PingID)\n* Federated OIDC (P14C)\n\nEach of these end with a different AuthN Policy Contract -- this simplifies the mapping between the App and the AuthN Ceremony you want that app to use.\n\nGets around issues with Connection Selectors:\n* The Selector **must** have at least 1 Connection\n* OAuth & SAML Apps can't be combined into a single Selector\n\nPF Admin API treats all the Policies as belonging to `default` and there's no way to add new Policy Trees directly.\n\nSince we've pre-built all the Adapters \\ Policy Contracts - this uses a single call to pre-built the Policies as well\n\n",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "a702892d-b8ae-412d-ac69-12d3f2362794",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "35a6dd7c-7d9d-4a5a-bf8a-0e60ffcc445a",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "Create SP Connections",
          "item": [
            {
              "name": "Get Signing Cert",
              "item": [
                {
                  "name": "Get Signing Cert",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "8b058b38-3a70-42c3-820d-2841e6e8b6f6",
                        "exec": [
                          "pm.test(\"Policy Contracts retrieved\", function () {",
                          "    pm.response.to.have.status(200);",
                          "    ",
                          "    var response = pm.response.json();",
                          "    pm.environment.set(\"signingCertId\", response.items[0].id);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "eef2308c-abe3-4f19-b43a-33f54ca90510",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "X-XSRF-Header",
                        "value": "pingfederate",
                        "type": "text"
                      }
                    ],
                    "url": "https://{{pingfed}}:{{admin}}/pf-admin-api/v1/keyPairs/signing"
                  },
                  "response": []
                }
              ],
              "_postman_id": "21d3985b-6575-4421-be40-c6660f4284e5",
              "_postman_isSubFolder": true
            },
            {
              "name": "SAML - HTML Form",
              "item": [
                {
                  "name": "Get Policy Contract",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "8b058b38-3a70-42c3-820d-2841e6e8b6f6",
                        "exec": [
                          "pm.test(\"Policy Contracts retrieved\", function () {",
                          "    pm.response.to.have.status(200);",
                          "    ",
                          "    var response = pm.response.json();",
                          "    pm.environment.set(\"policyContract\", response.items[0].id);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "df2c5b25-7b34-4b47-9e7c-1efdc5ef0b75",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "X-XSRF-Header",
                        "value": "pingfederate",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "https://{{pingfed}}:{{admin}}/pf-admin-api/v1/authenticationPolicyContracts?filter=HTML",
                      "protocol": "https",
                      "host": [
                        "{{pingfed}}"
                      ],
                      "port": "{{admin}}",
                      "path": [
                        "pf-admin-api",
                        "v1",
                        "authenticationPolicyContracts"
                      ],
                      "query": [
                        {
                          "key": "filter",
                          "value": "HTML"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Add SP Connection",
                  "_postman_id": "8e3bb9f8-b67d-4a8e-a1c5-446c4678b2fd",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-XSRF-Header",
                        "value": "pingfederate",
                        "type": "text"
                      },
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n            \"type\": \"SP\",\n            \"name\": \"Dummy SAML (HTML)\",\n            \"entityId\": \"Dummy-SAML-HTML\",\n            \"active\": true,\n            \"contactInfo\": {},\n            \"loggingMode\": \"STANDARD\",\n            \"virtualEntityIds\": [],\n            \"licenseConnectionGroup\": \"\",\n            \"credentials\": {\n                \"certs\": [],\n                \"signingSettings\": {\n                    \"signingKeyPairRef\": {\n                        \"id\": \"{{signingCertId}}\"\n                    },\n                    \"includeCertInSignature\": false,\n                    \"includeRawKeyInSignature\": false,\n                    \"algorithm\": \"SHA256withRSA\"\n                }\n            },\n            \"spBrowserSso\": {\n                \"protocol\": \"SAML20\",\n                \"enabledProfiles\": [\n                    \"IDP_INITIATED_SSO\"\n                ],\n                \"ssoServiceEndpoints\": [\n                    {\n                        \"binding\": \"POST\",\n                        \"url\": \"https://httpbin.org/anything\",\n                        \"isDefault\": true,\n                        \"index\": 0\n                    }\n                ],\n                \"signAssertions\": false,\n                \"signResponseAsRequired\": true,\n                \"spSamlIdentityMapping\": \"STANDARD\",\n                \"requireSignedAuthnRequests\": false,\n                \"assertionLifetime\": {\n                    \"minutesBefore\": 5,\n                    \"minutesAfter\": 5\n                },\n                \"encryptionPolicy\": {\n                    \"encryptAssertion\": false,\n                    \"encryptSloSubjectNameId\": false,\n                    \"sloSubjectNameIDEncrypted\": false,\n                    \"encryptedAttributes\": []\n                },\n                \"attributeContract\": {\n                    \"coreAttributes\": [\n                        {\n                            \"name\": \"SAML_SUBJECT\",\n                            \"nameFormat\": \"urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified\"\n                        }\n                    ],\n                    \"extendedAttributes\": []\n                },\n                \"adapterMappings\": [],\n                \"authenticationPolicyContractAssertionMappings\": [\n                    {\n                        \"attributeSources\": [],\n                        \"attributeContractFulfillment\": {\n                            \"SAML_SUBJECT\": {\n                                \"source\": {\n                                    \"type\": \"AUTHENTICATION_POLICY_CONTRACT\"\n                                },\n                                \"value\": \"entryUUID\"\n                            }\n                        },\n                        \"issuanceCriteria\": {\n                            \"conditionalCriteria\": []\n                        },\n                        \"authenticationPolicyContractRef\": {\n                            \"id\": \"{{policyContract}}\"\n                        },\n                        \"restrictVirtualEntityIds\": false,\n                        \"restrictedVirtualEntityIds\": [],\n                        \"abortSsoTransactionAsFailSafe\": false\n                    }\n                ]\n            }\n        }"
                    },
                    "url": "https://{{pingfed}}:{{admin}}/pf-admin-api/v1/idp/spConnections",
                    "description": "Dummy SP Connection -- sends you to https://httpbin.org/anything"
                  },
                  "response": []
                }
              ],
              "_postman_id": "7ea6a756-5f27-415f-8aa2-6ba2abaff62f",
              "_postman_isSubFolder": true
            },
            {
              "name": "SAML - MFA",
              "item": [
                {
                  "name": "Get Policy Contract",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "8b058b38-3a70-42c3-820d-2841e6e8b6f6",
                        "exec": [
                          "pm.test(\"Policy Contracts retrieved\", function () {",
                          "    pm.response.to.have.status(200);",
                          "    ",
                          "    var response = pm.response.json();",
                          "    pm.environment.set(\"policyContract\", response.items[0].id);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "679cbeef-ae6d-4d78-a2a6-2ea83f69ca14",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "X-XSRF-Header",
                        "value": "pingfederate",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "https://{{pingfed}}:{{admin}}/pf-admin-api/v1/authenticationPolicyContracts?filter=MFA",
                      "protocol": "https",
                      "host": [
                        "{{pingfed}}"
                      ],
                      "port": "{{admin}}",
                      "path": [
                        "pf-admin-api",
                        "v1",
                        "authenticationPolicyContracts"
                      ],
                      "query": [
                        {
                          "key": "filter",
                          "value": "MFA"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Add SP Connection",
                  "_postman_id": "8e385792-e501-4db5-bf33-0110a881a4db",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-XSRF-Header",
                        "type": "text",
                        "value": "pingfederate"
                      },
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n            \"type\": \"SP\",\n            \"name\": \"Dummy SAML (MFA)\",\n            \"entityId\": \"Dummy-SAML-MFA\",\n            \"active\": true,\n            \"contactInfo\": {},\n            \"loggingMode\": \"STANDARD\",\n            \"virtualEntityIds\": [],\n            \"licenseConnectionGroup\": \"\",\n            \"credentials\": {\n                \"certs\": [],\n                \"signingSettings\": {\n                    \"signingKeyPairRef\": {\n                        \"id\": \"{{signingCertId}}\"\n                    },\n                    \"includeCertInSignature\": false,\n                    \"includeRawKeyInSignature\": false,\n                    \"algorithm\": \"SHA256withRSA\"\n                }\n            },\n            \"spBrowserSso\": {\n                \"protocol\": \"SAML20\",\n                \"enabledProfiles\": [\n                    \"IDP_INITIATED_SSO\"\n                ],\n                \"ssoServiceEndpoints\": [\n                    {\n                        \"binding\": \"POST\",\n                        \"url\": \"https://httpbin.org/anything\",\n                        \"isDefault\": true,\n                        \"index\": 0\n                    }\n                ],\n                \"signAssertions\": false,\n                \"signResponseAsRequired\": true,\n                \"spSamlIdentityMapping\": \"STANDARD\",\n                \"requireSignedAuthnRequests\": false,\n                \"assertionLifetime\": {\n                    \"minutesBefore\": 5,\n                    \"minutesAfter\": 5\n                },\n                \"encryptionPolicy\": {\n                    \"encryptAssertion\": false,\n                    \"encryptSloSubjectNameId\": false,\n                    \"sloSubjectNameIDEncrypted\": false,\n                    \"encryptedAttributes\": []\n                },\n                \"attributeContract\": {\n                    \"coreAttributes\": [\n                        {\n                            \"name\": \"SAML_SUBJECT\",\n                            \"nameFormat\": \"urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified\"\n                        }\n                    ],\n                    \"extendedAttributes\": []\n                },\n                \"adapterMappings\": [],\n                \"authenticationPolicyContractAssertionMappings\": [\n                    {\n                        \"attributeSources\": [],\n                        \"attributeContractFulfillment\": {\n                            \"SAML_SUBJECT\": {\n                                \"source\": {\n                                    \"type\": \"AUTHENTICATION_POLICY_CONTRACT\"\n                                },\n                                \"value\": \"entryUUID\"\n                            }\n                        },\n                        \"issuanceCriteria\": {\n                            \"conditionalCriteria\": []\n                        },\n                        \"authenticationPolicyContractRef\": {\n                            \"id\": \"{{policyContract}}\"\n                        },\n                        \"restrictVirtualEntityIds\": false,\n                        \"restrictedVirtualEntityIds\": [],\n                        \"abortSsoTransactionAsFailSafe\": false\n                    }\n                ]\n            }\n        }"
                    },
                    "url": "https://{{pingfed}}:{{admin}}/pf-admin-api/v1/idp/spConnections",
                    "description": "Dummy SP Connection -- sends you to https://httpbin.org/anything"
                  },
                  "response": []
                }
              ],
              "_postman_id": "ce37ebfe-9652-4140-a47e-ac439f4ca0f7",
              "_postman_isSubFolder": true
            }
          ],
          "_postman_id": "f8e5c769-ae6d-4b29-9b71-0a336b8864b1",
          "description": "Create SP Connection that does an Authentication --> SAML Assertion to https://httpsbin.org/anything ",
          "_postman_isSubFolder": true
        },
        {
          "name": "Create Ping OIDC Clients",
          "item": [
            {
              "name": "Create OIDC Client (Logon)",
              "_postman_id": "bdd7e744-742e-49a1-bafd-b75ecf0c0352",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  },
                  {
                    "key": "X-XSRF-Header",
                    "value": "pingfederate",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "    {\n      \"clientId\": \"PingLogon\",\n      \"enabled\": true,\n      \"redirectUris\": [\n        \"https://change.me\",\n        \"https://{{pingdirHttp}}/delegator/*\"\n      ],\n      \"grantTypes\": [\n        \"IMPLICIT\",\n        \"AUTHORIZATION_CODE\"\n      ],\n      \"name\": \"Ping Logon\",\n      \"description\": \"This client is used to perform OIDC logons to Ping products:\\nPA Admin\\nDelegated Admin\\nConsent \\\\ DirAPI\\nDG (Symphonic)\",\n      \"logoUrl\": \"\",\n      \"refreshRolling\": \"SERVER_DEFAULT\",\n      \"persistentGrantExpirationType\": \"SERVER_DEFAULT\",\n      \"persistentGrantExpirationTime\": 0,\n      \"persistentGrantExpirationTimeUnit\": \"DAYS\",\n      \"persistentGrantIdleTimeoutType\": \"SERVER_DEFAULT\",\n      \"persistentGrantIdleTimeout\": 0,\n      \"persistentGrantIdleTimeoutTimeUnit\": \"DAYS\",\n      \"bypassApprovalPage\": true,\n      \"restrictScopes\": false,\n      \"restrictedScopes\": [],\n      \"exclusiveScopes\": [\n        \"pd:consents:priv\",\n        \"pd:consents:unpriv\",\n        \"urn:pingidentity:directory-delegated-admin\",\n        \"pd:dir:access\"\n      ],\n      \"restrictedResponseTypes\": [],\n      \"defaultAccessTokenManagerRef\": {\n        \"id\": \"jwtHTML\"\n      },\n      \"validateUsingAllEligibleAtms\": false,\n      \"oidcPolicy\": {\n        \"policyGroup\": {\n          \"id\": \"OIDCPolicyHTML\"\n        },\n        \"grantAccessSessionRevocationApi\": false,\n        \"pingAccessLogoutCapable\": false\n      },\n      \"clientAuth\": {\n        \"type\": \"NONE\",\n        \"enforceReplayPrevention\": false\n      },\n      \"extendedParameters\": {},\n      \"deviceFlowSettingType\": \"SERVER_DEFAULT\",\n      \"requireSignedRequests\": false\n    }"
                },
                "url": "https://{{pingfed}}:{{admin}}/pf-admin-api/v1/oauth/clients",
                "description": "This client can be used to issue tokens for several Ping Products:\n\n* PD DirAPI\n* PD Consent API\n* PD Delegated Admin App\n* DG Policy Admin App"
              },
              "response": []
            },
            {
              "name": "Create OIDC Client (PA WebSession)",
              "_postman_id": "adccc591-5c7e-423c-bdd1-8b4f923c83e3",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  },
                  {
                    "key": "X-XSRF-Header",
                    "value": "pingfederate",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "    {\n      \"clientId\": \"PA WebSession\",\n      \"enabled\": true,\n      \"redirectUris\": [\n        \"https://pingaccess/pa/oidc/cb\"\n      ],\n      \"grantTypes\": [\n        \"IMPLICIT\",\n        \"AUTHORIZATION_CODE\"\n      ],\n      \"name\": \"PingAccess WebSession\",\n      \"description\": \"This client is used to perform OIDC logons to PingAccess\",\n      \"logoUrl\": \"\",\n      \"refreshRolling\": \"SERVER_DEFAULT\",\n      \"persistentGrantExpirationType\": \"SERVER_DEFAULT\",\n      \"persistentGrantExpirationTime\": 0,\n      \"persistentGrantExpirationTimeUnit\": \"DAYS\",\n      \"persistentGrantIdleTimeoutType\": \"SERVER_DEFAULT\",\n      \"persistentGrantIdleTimeout\": 0,\n      \"persistentGrantIdleTimeoutTimeUnit\": \"DAYS\",\n      \"bypassApprovalPage\": true,\n      \"restrictScopes\": false,\n      \"restrictedScopes\": [],\n      \"exclusiveScopes\": [\n      ],\n      \"restrictedResponseTypes\": [],\n      \"defaultAccessTokenManagerRef\": {\n        \"id\": \"jwtHTML\"\n      },\n      \"validateUsingAllEligibleAtms\": false,\n      \"oidcPolicy\": {\n        \"policyGroup\": {\n          \"id\": \"OIDCPolicyHTML\"\n        },\n        \"grantAccessSessionRevocationApi\": false,\n        \"pingAccessLogoutCapable\": false\n      },\n      \"clientAuth\": {\n        \"type\": \"NONE\",\n        \"enforceReplayPrevention\": false\n      },\n      \"extendedParameters\": {},\n      \"deviceFlowSettingType\": \"SERVER_DEFAULT\",\n      \"requireSignedRequests\": false\n    }"
                },
                "url": "https://{{pingfed}}:{{admin}}/pf-admin-api/v1/oauth/clients",
                "description": "This client can be used to issue tokens for PingAccess WebSessions"
              },
              "response": []
            },
            {
              "name": "Create OIDC Client (Introspect)",
              "_postman_id": "ffc65e2a-f6cc-4329-a3a7-2cd96c484899",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  },
                  {
                    "key": "X-XSRF-Header",
                    "type": "text",
                    "value": "pingfederate"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n      \"clientId\": \"PingIntrospect\",\n      \"enabled\": true,\n      \"redirectUris\": [],\n      \"grantTypes\": [\n        \"ACCESS_TOKEN_VALIDATION\"\n      ],\n      \"name\": \"Ping Introspect\",\n      \"description\": \"This client is used to Introspect and validate PF-issued access_tokens\",\n      \"logoUrl\": \"\",\n      \"refreshRolling\": \"SERVER_DEFAULT\",\n      \"persistentGrantExpirationType\": \"SERVER_DEFAULT\",\n      \"persistentGrantExpirationTime\": 0,\n      \"persistentGrantExpirationTimeUnit\": \"DAYS\",\n      \"persistentGrantIdleTimeoutType\": \"SERVER_DEFAULT\",\n      \"persistentGrantIdleTimeout\": 0,\n      \"persistentGrantIdleTimeoutTimeUnit\": \"DAYS\",\n      \"bypassApprovalPage\": false,\n      \"restrictScopes\": false,\n      \"restrictedScopes\": [],\n      \"exclusiveScopes\": [],\n      \"restrictedResponseTypes\": [],\n      \"defaultAccessTokenManagerRef\": {\n        \"id\": \"jwtHTML\"\n      },\n      \"validateUsingAllEligibleAtms\": true,\n      \"oidcPolicy\": {\n        \"grantAccessSessionRevocationApi\": false,\n        \"pingAccessLogoutCapable\": false\n      },\n      \"clientAuth\": {\n        \"type\": \"SECRET\",\n        \"secret\": \"2FederateM0re\",\n        \"enforceReplayPrevention\": false\n      },\n      \"extendedParameters\": {},\n      \"deviceFlowSettingType\": \"SERVER_DEFAULT\",\n      \"requireSignedRequests\": false\n    }"
                },
                "url": "https://{{pingfed}}:{{admin}}/pf-admin-api/v1/oauth/clients"
              },
              "response": []
            }
          ],
          "_postman_id": "680f59a5-a4b0-4f78-a13c-5f45e5f501bc",
          "_postman_isSubFolder": true
        }
      ],
      "_postman_id": "05e2283b-eb88-4797-ae2d-2e541f207b15"
    }
  ],
  "auth": {
    "type": "basic",
    "basic": {
      "username": "administrator",
      "password": "2FederateM0re"
    }
  },
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "id": "e2363da0-69cb-4aab-9eb0-8fcbf445be81",
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "id": "29568365-4865-498d-8d0b-3bfe35ddcafb",
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ],
  "variable": [
    {
      "id": "7b70f5c8-0bbe-4ad3-bda1-a23f2e1655af",
      "key": "pingfed",
      "value": "pingfederate",
      "type": "string"
    },
    {
      "id": "b85c1b5f-0e92-46c7-9d3c-bb60885281a3",
      "key": "admin",
      "value": "9999",
      "type": "string"
    },
    {
      "id": "d473dc44-055b-40aa-9084-3f3281736528",
      "key": "pingdir",
      "value": "pingdirectory",
      "type": "string"
    },
    {
      "id": "d8ca64b4-0361-4665-b90a-d9b45f5063db",
      "key": "pingdirAdmin",
      "value": "cn=administrator",
      "type": "string"
    },
    {
      "id": "40b0c4c0-cf82-48d2-a019-64f0ff7ef057",
      "key": "pingdirAdminPwd",
      "value": "2FederateM0re",
      "type": "string"
    }
  ]
}